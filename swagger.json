{
    "swagger": "2.0",

    "info": {
        "version": "0.0.4",
        "contact": {
            "email": "wesleycrushers@dyn.com",
            "name": "Wesley Crushers"
        },
        "description": "This API is responsible for Traffic Management Policies and the attachment of those policies to Domains.",
        "license": {
            "name": "Closed Source.  Do not redistribute."
        },
        "title": "Policy Master API"
    },

    "paths": {

        "/assets/community": {
          "get": {
              "description":  "Get the list of community assets.",
              "operationId": "get_community_assets",
              "responses": {
                  "200": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          },

          "post": {
              "description": "Create new community assets.",
              "operationId": "create_community_assets",
              "parameters": [
                  {
                    "$ref": "#/parameters/assetListInput"
                  }
              ],
              "responses": {
                  "201": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          }
        },

        "/assets/community/{asset_type}": {
          "get": {
              "description":  "Get the list of community assets.",
              "operationId": "get_typed_community_assets",
              "parameters": [
                  {
                    "$ref": "#/parameters/assetTypeParam"
                  }
              ],
              "responses": {
                  "200": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          },

          "post": {
              "description": "Create new community assets.",
              "operationId": "create_typed_community_assets",
              "parameters": [
                  {
                    "$ref": "#/parameters/assetTypeParam"
                  },
                  {
                    "$ref": "#/parameters/assetListInput"
                  }
              ],
              "responses": {
                  "201": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          }
        },

        "/assets/community/{asset_type}/{asset_id}": {
          "get": {
            "description": "Get detailed asset information.",
            "operationId": "get_community_asset",
            "parameters": [
              {
                "$ref": "#/parameters/assetTypeParam"
              },
              {
                "$ref": "#/parameters/assetIdParam"
              }
            ],
            "responses": {
              "200": {
                  "$ref" : "#/responses/assetResponse"
              },
              "404": {
                  "$ref": "#/responses/notFoundError"
              }
            }
          },
          "put": {
            "description": "Update an existing asset.",
            "operationId": "update_community_asset",
            "parameters": [
              {
                "$ref": "#/parameters/assetTypeParam"
              },
              {
                "$ref": "#/parameters/assetIdParam"
              },
              {
                "$ref": "#/parameters/assetInput"
              }
            ],
            "responses": {
              "200": {
                  "$ref" : "#/responses/assetResponse"
              },
              "400": {
                  "$ref": "#/responses/badRequestError"
              },
              "404": {
                  "$ref": "#/responses/notFoundError"
              }
            }
          },
          "delete": {
            "description": "Delete community asset.",
            "operationId": "delete_community_asset",
            "parameters": [
              {
                "$ref": "#/parameters/assetTypeParam"
              },
              {
                "$ref": "#/parameters/assetIdParam"
              }
            ],
            "responses": {
              "200": {
                  "$ref" : "#/responses/assetResponse"
              },
              "404": {
                  "$ref": "#/responses/notFoundError"
              }
            }
          }
        },

        "/assets/private": {
          "get": {
              "description":  "Get the list of private assets.",
              "operationId": "get_private_assets",
              "responses": {
                  "200": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          },

          "post": {
              "description": "Create new private assets.",
              "operationId": "create_private_assets",
              "parameters": [
                  {
                    "$ref": "#/parameters/assetListInput"
                  }
              ],
              "responses": {
                  "201": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          }
        },

        "/assets/private/{asset_type}": {
          "get": {
              "description":  "Get the list of private assets.",
              "operationId": "get_typed_private_assets",
              "parameters": [
                  {
                    "$ref": "#/parameters/assetTypeParam"
                  }
              ],
              "responses": {
                  "200": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          },

          "post": {
              "description": "Create new private assets.",
              "operationId": "create_typed_private_assets",
              "parameters": [
                  {
                    "$ref": "#/parameters/assetTypeParam"
                  },
                  {
                    "$ref": "#/parameters/assetListInput"
                  }
              ],
              "responses": {
                  "201": {
                      "$ref": "#/responses/assetsResponse"
                    },
                  "400": {
                      "$ref": "#/responses/badRequestError"
                  }
              }
          }
        },

        "/assets/private/{asset_type}/{asset_id}": {
          "get": {
            "description": "Get detailed asset information.",
            "operationId": "get_private_asset",
            "parameters": [
              {
                "$ref": "#/parameters/assetTypeParam"
              },
              {
                "$ref": "#/parameters/assetIdParam"
              }
            ],
            "responses": {
              "200": {
                  "$ref" : "#/responses/assetResponse"
              },
              "404": {
                  "$ref": "#/responses/notFoundError"
              }
            }
          },
          "put": {
            "description": "Update an existing asset.",
            "operationId": "update_private_asset",
            "parameters": [
              {
                "$ref": "#/parameters/assetTypeParam"
              },
              {
                "$ref": "#/parameters/assetIdParam"
              },
              {
                "$ref": "#/parameters/assetInput"
              }
            ],
            "responses": {
              "200": {
                  "$ref" : "#/responses/assetResponse"
              },
              "400": {
                  "$ref": "#/responses/badRequestError"
              },
              "404": {
                  "$ref": "#/responses/notFoundError"
              }
            }
          },
          "delete": {
            "description": "Delete private asset.",
            "operationId": "delete_private_asset",
            "parameters": [
              {
                "$ref": "#/parameters/assetTypeParam"
              },
              {
                "$ref": "#/parameters/assetIdParam"
              }
            ],
            "responses": {
              "200": {
                  "$ref" : "#/responses/assetResponse"
              },
              "404": {
                  "$ref": "#/responses/notFoundError"
              }
            }
          }
        },

        "/policies/rttd": {
            "get": {
                "description": "Get 'Policy' objects for a customer.",
                "operationId": "get_policies",
                "parameters": [
                    {
                      "$ref": "#/parameters/limitParam"
                    },
                    {
                      "$ref": "#/parameters/offsetParam"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/litePoliciesResponse"
                    }
                }
            }
        },

        "/policies/rttd/{policy_slug}": {
            "get": {
                "description": "Get 'Policy' object that matches **policy_slug**.",
                "operationId": "get_policy",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  }
                ],
                "responses": {
                    "200": {
                        "$ref" : "#/responses/policyResponse"
                    },
                    "404": {
                        "$ref": "#/responses/notFoundError"
                    }
                }
            },
            "put": {
                "description": "Create or Update a policy.\n",
                "operationId": "update_policy",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  },
                  {
                    "$ref": "#/parameters/policyInput"
                  }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/policyResponse"
                    },
                    "201": {
                        "$ref": "#/responses/policyResponse"
                    }
                }
            },
            "delete": {
                "description": "Delete a policy.\n",
                "operationId": "delete_policy",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  }
                ],
                "responses": {
                    "204": {
                        "description": "Successful policy delete."
                    },
                    "404": {
                        "$ref": "#/responses/notFoundError"
                    }
                }
            }
        },

        "/attachments/rttd": {
            "get": {
                "description": "Get all the attachments for the customer.\n",
                "operationId": "get_all_attachments",
                "parameters": [
                    {
                      "$ref": "#/parameters/limitParam"
                    },
                    {
                      "$ref": "#/parameters/offsetParam"
                    }
                ],
                "responses": {
                    "200": {
                      "$ref": "#/responses/attachmentsResponse"
                    }
                }
            }
        },

        "/attachments/rttd/{policy_slug}": {
            "get": {
                "description": "Get the attachments for the specified policy.\n",
                "operationId": "get_policy_attachments",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/attachmentsResponse"
                    },
                    "404": {
                      "$ref": "#/responses/notFoundError"
                    }
                }
            },
            "put": {
                "description": "Replace all the attachments for the specified policy.  This will delete existing attachments and replace them with the new list.\n",
                "operationId": "update_policy_attachments",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  },
                  {
                    "$ref": "#/parameters/attachmentListInput"
                  }
                ],
                "responses": {
                    "204": {
                        "description": "Successful replacement of attachments."
                    },
                    "404": {
                      "$ref": "#/responses/notFoundError"
                    }
                }            },
            "delete": {
                "description": "Delete all the attachments for the specified policy.\n",
                "operationId": "delete_policy_attachments",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  }
                ],
                "responses": {
                    "204": {
                        "description": "Successful delete."
                    },
                    "404": {
                      "$ref": "#/responses/notFoundError"
                    }
                }
            }
        },
        "/attachments/rttd/{policy_slug}/{domain_name}": {
            "get": {
                "description": "Get the details for the attachment of the policy to the domain.\n",
                "operationId": "get_attachment",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  },
                  {
                    "$ref": "#/parameters/domainNameParam"
                  }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/attachmentResponse"
                    },
                    "404": {
                        "$ref": "#/responses/notFoundError"
                    }
                }
            },
            "put": {
                "description": "Create or update an attachment.\n",
                "operationId": "update_attachment",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  },
                  {
                    "$ref": "#/parameters/domainNameParam"
                  },
                  {
                    "$ref": "#/parameters/attachmentInput"
                  }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/responses/attachmentResponse"
                    },
                    "200": {
                        "$ref": "#/responses/attachmentResponse"
                    },
                    "404": {
                      "$ref": "#/responses/notFoundError"
                    }
                }
            },
            "delete": {
                "description": "Delete the link between the domain and the policy.\n",
                "operationId": "delete_attachment",
                "parameters": [
                  {
                    "$ref": "#/parameters/policySlugParam"
                  },
                  {
                    "$ref": "#/parameters/domainNameParam"
                  }
                ],
                "responses": {
                    "204": {
                        "description": "Successful delete."
                    },
                    "404": {
                        "$ref": "#/responses/notFoundError"
                    }
                }
            }
        }
    },

    "parameters": {
      "policySlugParam": {
        "name": "policy_slug",
        "in": "path",
        "description": "slug of policy",
        "required": true,
        "type": "string"
      },
      "domainNameParam": {
        "name": "domain_name",
        "in": "path",
        "description": "domain to link to policy",
        "required": true,
        "type": "string"
      },
      "offsetParam": {
        "name": "offset",
        "in": "query",
        "description": "Offset in the complete result set to start with.",
        "required": false,
        "type": "integer",
        "format": "int32"
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "max records to return",
        "required": false,
        "type": "integer",
        "format": "int32"
      },
      "assetIdParam": {
        "name": "asset_id",
        "in": "path",
        "required": true,
        "type": "string"
      },
      "assetTypeParam": {
        "name": "asset_type",
        "in": "path",
        "required": true,
        "type": "string"
      },
      "assetInput": {
        "name": "asset",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/Asset"
        }
      },
      "assetListInput": {
        "name": "assets",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/AssetCollection"
        }
      },
      "policyInput": {
        "name": "policy",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/Policy"
        }
      },
      "attachmentInput": {
        "name": "attachment",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/PolicyAttachment"
        }
      },
      "attachmentListInput": {
        "name": "attachement_list",
        "in": "body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/AttachmentCollection"
        }
      }
    },

    "responses": {
      "notFoundError" : {
        "description": "Response used when a resource is not found.",
        "schema": {
          "$ref" : "#/definitions/Error"
        }
      },
      "badRequestError" : {
        "description": "Response used if there is an error in the request.",
        "schema": {
          "$ref" : "#/definitions/Error"
        }
      },
      "litePoliciesResponse": {
        "description": "An object containing a list of Lite Policy objects.",
        "schema" : {
          "$ref": "#/definitions/LitePolicies"
        }
      },
      "policyResponse" : {
        "description": "Details for the specified policy.",
        "schema" : {
          "$ref": "#/definitions/Policy"
        }
      },
      "attachmentsResponse" : {
        "description": "Object containing a list of attachments.",
        "schema" : {
          "$ref": "#/definitions/AttachmentCollection"
        }
      },
      "attachmentResponse" : {
        "description": "Named Attachment for a customer",
        "schema" : {
          "$ref": "#/definitions/PolicyAttachment"
        }
      },
      "assetResponse" : {
        "description": "Details for the asset.",
        "schema" : {
          "$ref": "#/definitions/Asset"
        }
      },
      "assetsResponse" : {
        "description": "A list of assets.",
        "schema" : {
          "$ref": "#/definitions/AssetCollection"
        }
      }
    },

    "definitions": {
        "Error": {
          "description": "The schema for an error message",
          "type":  "object",
          "properties": {
            "error": {
              "type": "string",
              "description": "The error message from the server."
            }
          }
        },

        "ObjectRef": {
          "description": "An object that contains a url to the full object.",
          "type": "object",
          "required": [
                  "_self"
                ],
          "properties": {
            "_self": {
              "type": "string",
              "format": "url"
            }
          }
        },


        "ZoneRef": {
          "description": "An object that contains a url to the full object and a name.",
          "type": "object",
          "required": [
                  "_self",
                  "name"
                ],
          "properties": {
            "_self": {
              "type": "string",
              "format": "url"
            },
            "name": {
              "type": "string",
              "description": "Name of the zone."
            }
          }
        },

        "Asset": {
            "description": "A asset that can be used in a policy.",
            "allOf": [
              {
                "$ref": "#/definitions/ObjectRef"
              },
              {
                "type": "object",
                "required": [
                    "type",
                    "name",
                    "value"
                  ],
                  "properties": {
                  "id": {
                    "type": "string",
                    "description": "Unique identifier for an asset.  It must be unique within an asset type."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the asset.  Can be one of 'cdn' or 'endpoint'."
                  },
                  "name": {
                      "type": "string",
                      "description": "Name of the asset.  Community assets have unique names, Private asset names are unique for each customer."
                  },
                  "transport": {
                      "type": "string",
                      "description": "Either ipv4 or ipv6"
                  },
                  "value": {
                      "type": "string",
                      "description": "The value of the asset, like an ip address, cloud name, url."
                  }
                }
              }
            ]
        },

       "AssetCollection": {
          "description": "A collection of Assets.",
          "allOf": [
            {
              "$ref": "#/definitions/ObjectRef"
            },
            {
              "type": "object",
              "properties": {
                  "_items": {
                      "type": "array",
                      "items": {
                        "$ref" : "#/definitions/Asset"
                      }
                  }
              }
            }
          ]
      },

      "LitePolicy": {
            "description": "A light view of a Traffic Management policy.",
            "allOf": [
              {
                "$ref": "#/definitions/ObjectRef"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                      "type": "string",
                      "description": "name of policy"
                  },
                  "is_enabled": {
                      "type": "boolean",
                      "description": "true if the policy is in use."
                  },
                  "ttl": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                  }
                }
              }
            ]
        },

       "LitePolicies": {
          "description": "A collection of Traffic Management Lite Policy objects.",
          "allOf": [
            {
              "$ref": "#/definitions/ObjectRef"
            },
            {
              "type": "object",
              "properties": {
                  "_items": {
                      "type": "array",
                      "items": {
                        "$ref" : "#/definitions/LitePolicy"
                      }
                  }
              }
            }
          ]
      },

      "Policy": {
          "description": "A Traffic Management policy.",
          "allOf": [
            {
              "$ref": "#/definitions/ObjectRef"
            },
            {
              "type": "object",
              "properties": {
                "name": {
                    "type": "string",
                    "description": "name of policy"
                },
                "is_enabled": {
                    "type": "boolean",
                    "description": "true if the policy is in use."
                },
                "ttl": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 0
                },
                "answers": {
                    "type": "object"
                },
                "rules": {
                    "type": "object"
                },
                "attachments" : {
                  "$ref": "#/definitions/AttachmentCollection"
                }
              }
            }
          ]
      },

      "PolicyAttachment": {
        "description": "An attachment of a Policy to an Domain.",
        "allOf": [
          {
            "$ref": "#/definitions/ObjectRef"
          },
          {
            "type": "object",
            "properties": {
              "policy": {
                "$ref": "#/definitions/ObjectRef"
              },
              "zone": {
                "$ref": "#/definitions/ZoneRef"
              },
              "domain": {
                "type": "string"
              },
              "rtypes": {
                  "type": "array",
                  "items": {
                      "type": "string"
                  }
              }
            }
          }
        ]
      },

      "AttachmentCollection" : {
        "description":  "A collection of attachments.",
        "allOf": [
          {
            "$ref": "#/definitions/ObjectRef"
          },
          {
            "type": "object",
            "properties": {
              "_items": {
                "type": "array",
                "items" : {
                  "$ref": "#/definitions/PolicyAttachment"
                }
              }
            }
          }
        ]
      }
    }
}
